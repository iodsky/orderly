services:
  spring:
    image: ghcr.io/iodsky/orderly-api:latest
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: prod

      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      AWS_S3_REGION: ${AWS_S3_REGION}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      AWS_S3_BASE_FOLDER: ${AWS_S3_BASE_FOLDER}

    ports:
      - 8000
    labels:
      - "traefik.enable=true"

      # Route: orderly.iodsky.com â†’ spring container
      - "traefik.http.routers.orderly.rule=Host(`orderly.iodsky.com`)"
      - "traefik.http.routers.orderly.entrypoints=websecure"
      - "traefik.http.routers.orderly.tls.certresolver=myresolver"

      # Internal service port
      - "traefik.http.services.orderly.loadbalancer.server.port=8000"
    networks:
      - orderly-net
      - traefik

  watchtower:
    image: containrrr/watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_POLL_INTERVAL: 1800
      WATCHTOWER_INCLUDE_RESTARTING: "true"
      WATCHTOWER_NOTIFICATIONS: "email"
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: ${WATCHTOWER_EMAIL_FROM}
      WATCHTOWER_NOTIFICATION_EMAIL_TO: ${WATCHTOWER_EMAIL_TO}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: ${WATCHTOWER_EMAIL_SERVER}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: ${WATCHTOWER_EMAIL_USER}
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: ${WATCHTOWER_EMAIL_PASSWORD}
    command: --cleanup spring
    networks:
        - orderly-net

networks:
  orderly-net:
  traefik:
    external: true